build:
  image: registry.docker/golang:1.7
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  commands:
      #    - >
      #      if [[ "x$GO_VERSION" == "x1.5" ]] || [[ "x$GO_VERSION" == "x1.6" ]]; then
      #        if [[ "x$PLATFORM" == "xcross" ]]; then
      #          export SKIP="true";
      #        fi
      #      fi

    - >
      if [[ "x$GO_VERSION" == "x1.4" ]]; then
        export GO_VERSION_PATCH="1.4.3";
      elif [[ "x$GO_VERSION" == "x1.5" ]]; then
        export GO_VERSION_PATCH="1.5.4";
      elif [[ "x$GO_VERSION" == "x1.6" ]]; then
        export GO_VERSION_PATCH="1.6.4";
      elif [[ "x$GO_VERSION" == "x1.7" ]]; then
        export GO_VERSION_PATCH="1.7.5";
      elif [[ "x$GO_VERSION" == "x1.8" ]]; then
        export GO_VERSION_PATCH="1.8.0";
      fi

    - >
      if [[ "x$SKIP" == "xtrue" ]]; then
        echo "Not building golang version $GO_VERSION for platform $PLATFORM";
      fi

    - >
      # if [[ "x$SKIP" != "xtrue" ]] && [[ "x$PLATFORM" == "xswig" ]]; then
      #  echo "Building golang version $GO_VERSION using patch version $GO_VERSION_PATCH";
      #  docker build -t registry.docker/golang:$GO_VERSION_PATCH $GO_VERSION
      #  docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$GO_VERSION
      # fi

    - >
      if [[ "x$SKIP" != "xtrue" ]]; then
        export DIR="$GO_VERSION/$PLATFORM";
        export TAG="testing-$GO_VERSION-$PLATFORM";
        echo "Building golang version $GO_VERSION-$PLATFORM from directory $GO_VERSION/$PLATFORM";
        docker build -t registry.docker/golang:$GO_VERSION_PATCH $DIR
        docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$TAG
        docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$GO_VERSION
        docker push registry.docker/golang:$GO_VERSION
      fi

      #- >
      # if [[ "x$SKIP" != "xtrue" ]] && [[ "x$GO_VERSION" == "x$GO_VERSION_LATEST" ]]; then
      #  export MAJOR=`echo $GO_VERSION | cut -d"." -f1`;
      #  docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$PLATFORM;
      #  docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$MAJOR-$PLATFORM;
      #  if [[ "x$PLATFORM" == "xswig" ]]; then
      #    docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:$MAJOR;
      #    docker tag -f registry.docker/golang:$GO_VERSION_PATCH registry.docker/golang:latest;
      #  fi
      #fi
      #- docker push registry.docker/golang

matrix:
  GO_VERSION:
    - 1.7
    # - 1.8
    # - 1.6
    # - 1.5
    # - 1.4
  GO_VERSION_LATEST:
    - 1.7
  PLATFORM:
    - golang
    # - cross
    # - onbuild
    # - wheezy
    # - alpine
